<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="46" passed="46" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-05T09:58:26 IST" name="Parallel Admin Assignee Results" finished-at="2025-08-05T09:59:11 IST" duration-ms="45162">
    <groups>
    </groups>
    <test started-at="2025-08-05T09:58:26 IST" name="API - Admin Reject Flow" finished-at="2025-08-05T09:58:53 IST" duration-ms="27370">
      <class name="tests.AdminOrderRejectFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminOrderRejectFlowTest@b1712f3]" started-at="2025-08-05T09:58:26 IST" name="setupSession" finished-at="2025-08-05T09:58:34 IST" duration-ms="8082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@b1712f3]" started-at="2025-08-05T09:58:34 IST" name="createOrder" finished-at="2025-08-05T09:58:38 IST" duration-ms="3998" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@b1712f3]" started-at="2025-08-05T09:58:38 IST" name="splitOrder" finished-at="2025-08-05T09:58:38 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.createOrder" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminOrderRejectFlowTest@b1712f3]" started-at="2025-08-05T09:58:38 IST" name="updateTAT" finished-at="2025-08-05T09:58:44 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.splitOrder" duration-ms="5795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminOrderRejectFlowTest@b1712f3]" started-at="2025-08-05T09:58:44 IST" name="addAndAssignUsers" finished-at="2025-08-05T09:58:48 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.updateTAT" duration-ms="4449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminOrderRejectFlowTest@b1712f3]" started-at="2025-08-05T09:58:48 IST" name="completeStages" finished-at="2025-08-05T09:58:51 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.addAndAssignUsers" duration-ms="2574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="verifyRejectOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@b1712f3]" started-at="2025-08-05T09:58:51 IST" name="verifyRejectOrder" finished-at="2025-08-05T09:58:53 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.completeStages" duration-ms="2203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRejectOrder -->
      </class> <!-- tests.AdminOrderRejectFlowTest -->
    </test> <!-- API - Admin Reject Flow -->
    <test started-at="2025-08-05T09:58:26 IST" name="API - Admin Order with Split Flow" finished-at="2025-08-05T09:58:53 IST" duration-ms="27065">
      <class name="tests.AdminSplitOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminSplitOrderFlowTest@43f82e78]" started-at="2025-08-05T09:58:26 IST" name="setupSession" finished-at="2025-08-05T09:58:34 IST" duration-ms="7911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminSplitOrderFlowTest@43f82e78]" started-at="2025-08-05T09:58:34 IST" name="createOrder" finished-at="2025-08-05T09:58:36 IST" duration-ms="2260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="downloadcompleteOnTimeReportTest()[pri:0, instance:tests.AdminSplitOrderFlowTest@43f82e78]" started-at="2025-08-05T09:58:36 IST" name="downloadcompleteOnTimeReportTest" finished-at="2025-08-05T09:58:36 IST" duration-ms="428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteOnTimeReportTest -->
        <test-method signature="downloadcompleteWithDelayReportTest()[pri:0, instance:tests.AdminSplitOrderFlowTest@43f82e78]" started-at="2025-08-05T09:58:36 IST" name="downloadcompleteWithDelayReportTest" finished-at="2025-08-05T09:58:36 IST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteWithDelayReportTest -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminSplitOrderFlowTest@43f82e78]" started-at="2025-08-05T09:58:36 IST" name="splitOrder" finished-at="2025-08-05T09:58:37 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.createOrder" duration-ms="1005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminSplitOrderFlowTest@43f82e78]" started-at="2025-08-05T09:58:37 IST" name="updateTAT" finished-at="2025-08-05T09:58:38 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.splitOrder" duration-ms="444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminSplitOrderFlowTest@43f82e78]" started-at="2025-08-05T09:58:38 IST" name="addAndAssignUsers" finished-at="2025-08-05T09:58:47 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.updateTAT" duration-ms="8865" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminSplitOrderFlowTest@43f82e78]" started-at="2025-08-05T09:58:47 IST" name="addRemarks" finished-at="2025-08-05T09:58:48 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers" duration-ms="927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminSplitOrderFlowTest@43f82e78]" started-at="2025-08-05T09:58:48 IST" name="completeStages" finished-at="2025-08-05T09:58:49 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers" duration-ms="1673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminSplitOrderFlowTest@43f82e78]" started-at="2025-08-05T09:58:49 IST" name="addAttachments" finished-at="2025-08-05T09:58:50 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addRemarks" duration-ms="769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="verifyCompletion()[pri:0, instance:tests.AdminSplitOrderFlowTest@43f82e78]" started-at="2025-08-05T09:58:50 IST" name="verifyCompletion" finished-at="2025-08-05T09:58:53 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.completeStages" duration-ms="2478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompletion -->
      </class> <!-- tests.AdminSplitOrderFlowTest -->
    </test> <!-- API - Admin Order with Split Flow -->
    <test started-at="2025-08-05T09:58:26 IST" name="Admin Flow" finished-at="2025-08-05T09:58:56 IST" duration-ms="30838">
      <class name="tests.AdminOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:26 IST" name="setupSession" finished-at="2025-08-05T09:58:34 IST" duration-ms="8061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:34 IST" name="createOrder" finished-at="2025-08-05T09:58:38 IST" duration-ms="4060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="downloadcompleteOnTimeReportTest()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:38 IST" name="downloadcompleteOnTimeReportTest" finished-at="2025-08-05T09:58:38 IST" duration-ms="381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteOnTimeReportTest -->
        <test-method signature="downloadcompleteWithDelayReportTest()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:38 IST" name="downloadcompleteWithDelayReportTest" finished-at="2025-08-05T09:58:38 IST" duration-ms="273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteWithDelayReportTest -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:38 IST" name="splitOrder" finished-at="2025-08-05T09:58:39 IST" depends-on-methods="tests.AdminOrderFlowTest.createOrder" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:39 IST" name="updateTAT" finished-at="2025-08-05T09:58:44 IST" depends-on-methods="tests.AdminOrderFlowTest.splitOrder" duration-ms="5137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:44 IST" name="addAndAssignUsers" finished-at="2025-08-05T09:58:49 IST" depends-on-methods="tests.AdminOrderFlowTest.updateTAT" duration-ms="5057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:49 IST" name="addRemarks" finished-at="2025-08-05T09:58:50 IST" depends-on-methods="tests.AdminOrderFlowTest.addAndAssignUsers" duration-ms="842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:50 IST" name="addAttachments" finished-at="2025-08-05T09:58:50 IST" depends-on-methods="tests.AdminOrderFlowTest.addRemarks" duration-ms="868" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:50 IST" name="completeStages" finished-at="2025-08-05T09:58:54 IST" depends-on-methods="tests.AdminOrderFlowTest.addAttachments" duration-ms="3337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="verifyCompletion()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:54 IST" name="verifyCompletion" finished-at="2025-08-05T09:58:56 IST" depends-on-methods="tests.AdminOrderFlowTest.completeStages" duration-ms="2335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompletion -->
        <test-method signature="updateUser()[pri:0, instance:tests.AdminOrderFlowTest@4b013c76]" started-at="2025-08-05T09:58:56 IST" name="updateUser" finished-at="2025-08-05T09:58:56 IST" depends-on-methods="tests.AdminOrderFlowTest.addAndAssignUsers, tests.AdminOrderFlowTest.verifyCompletion" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
      </class> <!-- tests.AdminOrderFlowTest -->
    </test> <!-- Admin Flow -->
    <test started-at="2025-08-05T09:58:26 IST" name="UI - Report Validation" finished-at="2025-08-05T09:59:01 IST" duration-ms="34998">
      <class name="tests.ReportWithExcel">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ReportWithExcel@4ce7fffa]" started-at="2025-08-05T09:58:26 IST" name="setUp" finished-at="2025-08-05T09:58:33 IST" duration-ms="7153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="compareReportUIAndExcelData()[pri:0, instance:tests.ReportWithExcel@4ce7fffa]" started-at="2025-08-05T09:58:33 IST" name="compareReportUIAndExcelData" finished-at="2025-08-05T09:59:00 IST" duration-ms="26916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareReportUIAndExcelData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ReportWithExcel@4ce7fffa]" started-at="2025-08-05T09:59:00 IST" name="tearDown" finished-at="2025-08-05T09:59:01 IST" duration-ms="801" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ReportWithExcel -->
    </test> <!-- UI - Report Validation -->
    <test started-at="2025-08-05T09:58:26 IST" name="Admin-Assignee Flow" finished-at="2025-08-05T09:59:01 IST" duration-ms="35863">
      <class name="tests.AdminAssigneeOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@64b73e7a]" started-at="2025-08-05T09:58:26 IST" name="setupSession" finished-at="2025-08-05T09:58:34 IST" duration-ms="7911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@64b73e7a]" started-at="2025-08-05T09:58:34 IST" name="createOrder" finished-at="2025-08-05T09:58:38 IST" duration-ms="4266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@64b73e7a]" started-at="2025-08-05T09:58:38 IST" name="splitOrder" finished-at="2025-08-05T09:58:38 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.createOrder" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@64b73e7a]" started-at="2025-08-05T09:58:38 IST" name="updateTAT" finished-at="2025-08-05T09:58:44 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.splitOrder" duration-ms="5555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@64b73e7a]" started-at="2025-08-05T09:58:44 IST" name="addAndAssignUsers" finished-at="2025-08-05T09:58:48 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.updateTAT" duration-ms="4420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@64b73e7a]" started-at="2025-08-05T09:58:48 IST" name="addRemarks" finished-at="2025-08-05T09:58:49 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addAndAssignUsers" duration-ms="1008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@64b73e7a]" started-at="2025-08-05T09:58:49 IST" name="addAttachments" finished-at="2025-08-05T09:58:50 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addRemarks" duration-ms="861" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="switchToAssignedUser()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@64b73e7a]" started-at="2025-08-05T09:58:50 IST" name="switchToAssignedUser" finished-at="2025-08-05T09:58:50 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addAndAssignUsers, tests.AdminAssigneeOrderFlowTest.addAttachments" duration-ms="464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- switchToAssignedUser -->
        <test-method signature="termAndConditionAssignedUser()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@64b73e7a]" started-at="2025-08-05T09:58:50 IST" name="termAndConditionAssignedUser" finished-at="2025-08-05T09:58:51 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.switchToAssignedUser" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termAndConditionAssignedUser -->
        <test-method signature="completeStagesWithRemarksAndAttachments()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@64b73e7a]" started-at="2025-08-05T09:58:51 IST" name="completeStagesWithRemarksAndAttachments" finished-at="2025-08-05T09:59:01 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.termAndConditionAssignedUser" duration-ms="10716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStagesWithRemarksAndAttachments -->
      </class> <!-- tests.AdminAssigneeOrderFlowTest -->
    </test> <!-- Admin-Assignee Flow -->
    <test started-at="2025-08-05T09:58:26 IST" name="UI - Add User via UI" finished-at="2025-08-05T09:59:02 IST" duration-ms="36218">
      <class name="tests.AddUserTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AddUserTest@76012793]" started-at="2025-08-05T09:58:26 IST" name="setUp" finished-at="2025-08-05T09:58:33 IST" duration-ms="7149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testfillAddUser()[pri:0, instance:tests.AddUserTest@76012793]" started-at="2025-08-05T09:58:33 IST" name="testfillAddUser" finished-at="2025-08-05T09:59:01 IST" duration-ms="28363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testfillAddUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AddUserTest@76012793]" started-at="2025-08-05T09:59:01 IST" name="tearDown" finished-at="2025-08-05T09:59:02 IST" duration-ms="575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.AddUserTest -->
    </test> <!-- UI - Add User via UI -->
    <test started-at="2025-08-05T09:58:26 IST" name="API - Admin Multiple Assignee Flow" finished-at="2025-08-05T09:59:11 IST" duration-ms="45155">
      <class name="tests.AdminMultipleAssigneeOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@76884e4b]" started-at="2025-08-05T09:58:26 IST" name="setupSession" finished-at="2025-08-05T09:58:34 IST" duration-ms="8075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@76884e4b]" started-at="2025-08-05T09:58:34 IST" name="createOrder" finished-at="2025-08-05T09:58:38 IST" duration-ms="4042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@76884e4b]" started-at="2025-08-05T09:58:38 IST" name="splitOrder" finished-at="2025-08-05T09:58:38 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.createOrder" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@76884e4b]" started-at="2025-08-05T09:58:38 IST" name="updateTAT" finished-at="2025-08-05T09:58:44 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.splitOrder" duration-ms="5633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="createAndAssignMultipleUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@76884e4b]" started-at="2025-08-05T09:58:44 IST" name="createAndAssignMultipleUsers" finished-at="2025-08-05T09:58:50 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.updateTAT" duration-ms="5997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAndAssignMultipleUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@76884e4b]" started-at="2025-08-05T09:58:50 IST" name="addRemarks" finished-at="2025-08-05T09:58:51 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.createAndAssignMultipleUsers" duration-ms="964" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@76884e4b]" started-at="2025-08-05T09:58:51 IST" name="addAttachments" finished-at="2025-08-05T09:58:52 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.addRemarks" duration-ms="854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="acceptTermsForAllUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@76884e4b]" started-at="2025-08-05T09:58:52 IST" name="acceptTermsForAllUsers" finished-at="2025-08-05T09:58:53 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.addAttachments" duration-ms="1962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptTermsForAllUsers -->
        <test-method signature="performStageActionsAsMultipleUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@76884e4b]" started-at="2025-08-05T09:58:53 IST" name="performStageActionsAsMultipleUsers" finished-at="2025-08-05T09:59:11 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.acceptTermsForAllUsers" duration-ms="17227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performStageActionsAsMultipleUsers -->
      </class> <!-- tests.AdminMultipleAssigneeOrderFlowTest -->
    </test> <!-- API - Admin Multiple Assignee Flow -->
  </suite> <!-- Parallel Admin Assignee Results -->
</testng-results>
