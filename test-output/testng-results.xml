<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="49" passed="49" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-05T16:08:44 IST" name="Hybrid Automation Suite" finished-at="2025-08-05T16:11:26 IST" duration-ms="162131">
    <groups>
    </groups>
    <test started-at="2025-08-05T16:08:44 IST" name="UI - Dashboard Before" finished-at="2025-08-05T16:08:56 IST" duration-ms="11983">
      <class name="tests.DashboardTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.DashboardTest@53fe15ff]" started-at="2025-08-05T16:08:44 IST" name="setUp" finished-at="2025-08-05T16:08:48 IST" duration-ms="4087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDashboardCountsBefore()[pri:0, instance:tests.DashboardTest@53fe15ff]" started-at="2025-08-05T16:08:48 IST" name="testDashboardCountsBefore" finished-at="2025-08-05T16:08:56 IST" duration-ms="7330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDashboardCountsBefore -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DashboardTest@53fe15ff]" started-at="2025-08-05T16:08:56 IST" name="tearDown" finished-at="2025-08-05T16:08:56 IST" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DashboardTest -->
    </test> <!-- UI - Dashboard Before -->
    <test started-at="2025-08-05T16:08:57 IST" name="API - Admin Flow" finished-at="2025-08-05T16:09:17 IST" duration-ms="19748">
      <class name="tests.AdminOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:08:57 IST" name="setupSession" finished-at="2025-08-05T16:09:00 IST" duration-ms="3473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:09:00 IST" name="createOrder" finished-at="2025-08-05T16:09:03 IST" duration-ms="2754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="downloadcompleteOnTimeReportTest()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:09:03 IST" name="downloadcompleteOnTimeReportTest" finished-at="2025-08-05T16:09:04 IST" duration-ms="816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteOnTimeReportTest -->
        <test-method signature="downloadcompleteWithDelayReportTest()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:09:04 IST" name="downloadcompleteWithDelayReportTest" finished-at="2025-08-05T16:09:04 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteWithDelayReportTest -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:09:04 IST" name="splitOrder" finished-at="2025-08-05T16:09:04 IST" depends-on-methods="tests.AdminOrderFlowTest.createOrder" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:09:04 IST" name="updateTAT" finished-at="2025-08-05T16:09:07 IST" depends-on-methods="tests.AdminOrderFlowTest.splitOrder" duration-ms="2633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:09:07 IST" name="addAndAssignUsers" finished-at="2025-08-05T16:09:09 IST" depends-on-methods="tests.AdminOrderFlowTest.updateTAT" duration-ms="2334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:09:09 IST" name="addRemarks" finished-at="2025-08-05T16:09:10 IST" depends-on-methods="tests.AdminOrderFlowTest.addAndAssignUsers" duration-ms="769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:09:10 IST" name="addAttachments" finished-at="2025-08-05T16:09:11 IST" depends-on-methods="tests.AdminOrderFlowTest.addRemarks" duration-ms="755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:09:11 IST" name="completeStages" finished-at="2025-08-05T16:09:14 IST" depends-on-methods="tests.AdminOrderFlowTest.addAttachments" duration-ms="3317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="verifyCompletion()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:09:14 IST" name="verifyCompletion" finished-at="2025-08-05T16:09:16 IST" depends-on-methods="tests.AdminOrderFlowTest.completeStages" duration-ms="2407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompletion -->
        <test-method signature="updateUser()[pri:0, instance:tests.AdminOrderFlowTest@2b4c1d96]" started-at="2025-08-05T16:09:16 IST" name="updateUser" finished-at="2025-08-05T16:09:17 IST" depends-on-methods="tests.AdminOrderFlowTest.addAndAssignUsers, tests.AdminOrderFlowTest.verifyCompletion" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
      </class> <!-- tests.AdminOrderFlowTest -->
    </test> <!-- API - Admin Flow -->
    <test started-at="2025-08-05T16:09:17 IST" name="API - Admin Order with Split Flow" finished-at="2025-08-05T16:09:28 IST" duration-ms="11078">
      <class name="tests.AdminSplitOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:17 IST" name="setupSession" finished-at="2025-08-05T16:09:17 IST" duration-ms="422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:17 IST" name="createOrder" finished-at="2025-08-05T16:09:18 IST" duration-ms="579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="downloadcompleteOnTimeReportTest()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:18 IST" name="downloadcompleteOnTimeReportTest" finished-at="2025-08-05T16:09:18 IST" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteOnTimeReportTest -->
        <test-method signature="downloadcompleteWithDelayReportTest()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:18 IST" name="downloadcompleteWithDelayReportTest" finished-at="2025-08-05T16:09:18 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteWithDelayReportTest -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:18 IST" name="splitOrder" finished-at="2025-08-05T16:09:19 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.createOrder" duration-ms="584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:19 IST" name="updateTAT" finished-at="2025-08-05T16:09:19 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.splitOrder" duration-ms="274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:19 IST" name="addAndAssignUsers" finished-at="2025-08-05T16:09:22 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.updateTAT" duration-ms="2530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:22 IST" name="addRemarks" finished-at="2025-08-05T16:09:22 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers" duration-ms="740" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:22 IST" name="completeStages" finished-at="2025-08-05T16:09:24 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers" duration-ms="1955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:24 IST" name="addAttachments" finished-at="2025-08-05T16:09:25 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addRemarks" duration-ms="754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="verifyCompletion()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:25 IST" name="verifyCompletion" finished-at="2025-08-05T16:09:27 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.completeStages" duration-ms="2352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompletion -->
        <test-method signature="updateUser()[pri:0, instance:tests.AdminSplitOrderFlowTest@13d9b21f]" started-at="2025-08-05T16:09:27 IST" name="updateUser" finished-at="2025-08-05T16:09:28 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers, tests.AdminSplitOrderFlowTest.verifyCompletion" duration-ms="274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
      </class> <!-- tests.AdminSplitOrderFlowTest -->
    </test> <!-- API - Admin Order with Split Flow -->
    <test started-at="2025-08-05T16:09:28 IST" name="API - Admin Asignee Flow" finished-at="2025-08-05T16:09:47 IST" duration-ms="19707">
      <class name="tests.AdminAssigneeOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@15dcfae7]" started-at="2025-08-05T16:09:28 IST" name="setupSession" finished-at="2025-08-05T16:09:28 IST" duration-ms="399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@15dcfae7]" started-at="2025-08-05T16:09:28 IST" name="createOrder" finished-at="2025-08-05T16:09:31 IST" duration-ms="2533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@15dcfae7]" started-at="2025-08-05T16:09:31 IST" name="splitOrder" finished-at="2025-08-05T16:09:31 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.createOrder" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@15dcfae7]" started-at="2025-08-05T16:09:31 IST" name="updateTAT" finished-at="2025-08-05T16:09:33 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.splitOrder" duration-ms="2262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@15dcfae7]" started-at="2025-08-05T16:09:33 IST" name="addAndAssignUsers" finished-at="2025-08-05T16:09:36 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.updateTAT" duration-ms="2493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@15dcfae7]" started-at="2025-08-05T16:09:36 IST" name="addRemarks" finished-at="2025-08-05T16:09:36 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addAndAssignUsers" duration-ms="736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@15dcfae7]" started-at="2025-08-05T16:09:36 IST" name="addAttachments" finished-at="2025-08-05T16:09:37 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addRemarks" duration-ms="694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="switchToAssignedUser()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@15dcfae7]" started-at="2025-08-05T16:09:37 IST" name="switchToAssignedUser" finished-at="2025-08-05T16:09:37 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addAndAssignUsers, tests.AdminAssigneeOrderFlowTest.addAttachments" duration-ms="423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- switchToAssignedUser -->
        <test-method signature="termAndConditionAssignedUser()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@15dcfae7]" started-at="2025-08-05T16:09:37 IST" name="termAndConditionAssignedUser" finished-at="2025-08-05T16:09:38 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.switchToAssignedUser" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termAndConditionAssignedUser -->
        <test-method signature="completeStagesWithRemarksAndAttachments()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@15dcfae7]" started-at="2025-08-05T16:09:38 IST" name="completeStagesWithRemarksAndAttachments" finished-at="2025-08-05T16:09:47 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.termAndConditionAssignedUser" duration-ms="9899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStagesWithRemarksAndAttachments -->
      </class> <!-- tests.AdminAssigneeOrderFlowTest -->
    </test> <!-- API - Admin Asignee Flow -->
    <test started-at="2025-08-05T16:09:48 IST" name="API - Admin Multiple Assignee Flow" finished-at="2025-08-05T16:10:19 IST" duration-ms="31344">
      <class name="tests.AdminMultipleAssigneeOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@75f95314]" started-at="2025-08-05T16:09:48 IST" name="setupSession" finished-at="2025-08-05T16:09:48 IST" duration-ms="806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@75f95314]" started-at="2025-08-05T16:09:48 IST" name="createOrder" finished-at="2025-08-05T16:09:51 IST" duration-ms="2493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@75f95314]" started-at="2025-08-05T16:09:51 IST" name="splitOrder" finished-at="2025-08-05T16:09:51 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.createOrder" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@75f95314]" started-at="2025-08-05T16:09:51 IST" name="updateTAT" finished-at="2025-08-05T16:09:53 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.splitOrder" duration-ms="2288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="createAndAssignMultipleUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@75f95314]" started-at="2025-08-05T16:09:53 IST" name="createAndAssignMultipleUsers" finished-at="2025-08-05T16:09:58 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.updateTAT" duration-ms="5121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAndAssignMultipleUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@75f95314]" started-at="2025-08-05T16:09:58 IST" name="addRemarks" finished-at="2025-08-05T16:09:59 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.createAndAssignMultipleUsers" duration-ms="732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@75f95314]" started-at="2025-08-05T16:09:59 IST" name="addAttachments" finished-at="2025-08-05T16:10:00 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.addRemarks" duration-ms="708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="acceptTermsForAllUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@75f95314]" started-at="2025-08-05T16:10:00 IST" name="acceptTermsForAllUsers" finished-at="2025-08-05T16:10:02 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.addAttachments" duration-ms="1731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptTermsForAllUsers -->
        <test-method signature="performStageActionsAsMultipleUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@75f95314]" started-at="2025-08-05T16:10:02 IST" name="performStageActionsAsMultipleUsers" finished-at="2025-08-05T16:10:19 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.acceptTermsForAllUsers" duration-ms="17320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performStageActionsAsMultipleUsers -->
      </class> <!-- tests.AdminMultipleAssigneeOrderFlowTest -->
    </test> <!-- API - Admin Multiple Assignee Flow -->
    <test started-at="2025-08-05T16:10:19 IST" name="API - Admin Reject Flow" finished-at="2025-08-05T16:10:31 IST" duration-ms="12027">
      <class name="tests.AdminOrderRejectFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminOrderRejectFlowTest@79d94571]" started-at="2025-08-05T16:10:19 IST" name="setupSession" finished-at="2025-08-05T16:10:19 IST" duration-ms="405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@79d94571]" started-at="2025-08-05T16:10:19 IST" name="createOrder" finished-at="2025-08-05T16:10:22 IST" duration-ms="2566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@79d94571]" started-at="2025-08-05T16:10:22 IST" name="splitOrder" finished-at="2025-08-05T16:10:22 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.createOrder" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminOrderRejectFlowTest@79d94571]" started-at="2025-08-05T16:10:22 IST" name="updateTAT" finished-at="2025-08-05T16:10:24 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.splitOrder" duration-ms="2256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminOrderRejectFlowTest@79d94571]" started-at="2025-08-05T16:10:24 IST" name="addAndAssignUsers" finished-at="2025-08-05T16:10:26 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.updateTAT" duration-ms="2147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminOrderRejectFlowTest@79d94571]" started-at="2025-08-05T16:10:26 IST" name="completeStages" finished-at="2025-08-05T16:10:29 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.addAndAssignUsers" duration-ms="2345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="verifyRejectOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@79d94571]" started-at="2025-08-05T16:10:29 IST" name="verifyRejectOrder" finished-at="2025-08-05T16:10:31 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.completeStages" duration-ms="2182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRejectOrder -->
      </class> <!-- tests.AdminOrderRejectFlowTest -->
    </test> <!-- API - Admin Reject Flow -->
    <test started-at="2025-08-05T16:10:31 IST" name="UI - Report Validation" finished-at="2025-08-05T16:10:50 IST" duration-ms="19251">
      <class name="tests.ReportWithExcel">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ReportWithExcel@93cf163]" started-at="2025-08-05T16:10:31 IST" name="setUp" finished-at="2025-08-05T16:10:34 IST" duration-ms="3262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="compareReportUIAndExcelData()[pri:0, instance:tests.ReportWithExcel@93cf163]" started-at="2025-08-05T16:10:34 IST" name="compareReportUIAndExcelData" finished-at="2025-08-05T16:10:50 IST" duration-ms="15365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareReportUIAndExcelData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ReportWithExcel@93cf163]" started-at="2025-08-05T16:10:50 IST" name="tearDown" finished-at="2025-08-05T16:10:50 IST" duration-ms="620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ReportWithExcel -->
    </test> <!-- UI - Report Validation -->
    <test started-at="2025-08-05T16:10:50 IST" name="UI - Add User via UI" finished-at="2025-08-05T16:11:15 IST" duration-ms="24606">
      <class name="tests.AddUserTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AddUserTest@2a76840c]" started-at="2025-08-05T16:10:50 IST" name="setUp" finished-at="2025-08-05T16:10:54 IST" duration-ms="3606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testfillAddUser()[pri:0, instance:tests.AddUserTest@2a76840c]" started-at="2025-08-05T16:10:54 IST" name="testfillAddUser" finished-at="2025-08-05T16:11:15 IST" duration-ms="20573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testfillAddUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AddUserTest@2a76840c]" started-at="2025-08-05T16:11:15 IST" name="tearDown" finished-at="2025-08-05T16:11:15 IST" duration-ms="420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.AddUserTest -->
    </test> <!-- UI - Add User via UI -->
    <test started-at="2025-08-05T16:11:15 IST" name="UI - Dashboard After" finished-at="2025-08-05T16:11:26 IST" duration-ms="11439">
      <class name="tests.DashboardTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.DashboardTest@623e088f]" started-at="2025-08-05T16:11:15 IST" name="setUp" finished-at="2025-08-05T16:11:19 IST" duration-ms="4004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDashboardCountsAfter()[pri:0, instance:tests.DashboardTest@623e088f]" started-at="2025-08-05T16:11:19 IST" name="testDashboardCountsAfter" finished-at="2025-08-05T16:11:26 IST" duration-ms="7013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDashboardCountsAfter -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DashboardTest@623e088f]" started-at="2025-08-05T16:11:26 IST" name="tearDown" finished-at="2025-08-05T16:11:26 IST" duration-ms="419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DashboardTest -->
    </test> <!-- UI - Dashboard After -->
  </suite> <!-- Hybrid Automation Suite -->
</testng-results>
