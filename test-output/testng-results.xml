<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="54" passed="54" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-26T11:26:26 IST" name="Hybrid Automation Suite" finished-at="2025-08-26T11:30:17 IST" duration-ms="231352">
    <groups>
    </groups>
    <test started-at="2025-08-26T11:26:26 IST" name="UI - Dashboard Before" finished-at="2025-08-26T11:26:38 IST" duration-ms="11740">
      <class name="tests.DashboardTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.DashboardTest@712625fd]" started-at="2025-08-26T11:26:26 IST" name="setUp" finished-at="2025-08-26T11:26:30 IST" duration-ms="4324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDashboardCountsBefore()[pri:0, instance:tests.DashboardTest@712625fd]" started-at="2025-08-26T11:26:30 IST" name="testDashboardCountsBefore" finished-at="2025-08-26T11:26:37 IST" duration-ms="6982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDashboardCountsBefore -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DashboardTest@712625fd]" started-at="2025-08-26T11:26:37 IST" name="tearDown" finished-at="2025-08-26T11:26:38 IST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DashboardTest -->
    </test> <!-- UI - Dashboard Before -->
    <test started-at="2025-08-26T11:26:38 IST" name="API - Admin Flow" finished-at="2025-08-26T11:27:41 IST" duration-ms="63119">
      <class name="tests.AdminOrderFlowTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:26:38 IST" name="setUp" finished-at="2025-08-26T11:26:41 IST" duration-ms="2901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:26:41 IST" name="setupSession" finished-at="2025-08-26T11:26:45 IST" duration-ms="3966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:26:45 IST" name="createOrder" finished-at="2025-08-26T11:26:48 IST" duration-ms="2828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="verifyOrderInUI()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:26:48 IST" name="verifyOrderInUI" finished-at="2025-08-26T11:27:01 IST" depends-on-methods="tests.AdminOrderFlowTest.createOrder" duration-ms="13054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderInUI -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:01 IST" name="splitOrder" finished-at="2025-08-26T11:27:01 IST" depends-on-methods="tests.AdminOrderFlowTest.verifyOrderInUI" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:01 IST" name="updateTAT" finished-at="2025-08-26T11:27:04 IST" depends-on-methods="tests.AdminOrderFlowTest.splitOrder" duration-ms="2571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:04 IST" name="addAndAssignUsers" finished-at="2025-08-26T11:27:06 IST" depends-on-methods="tests.AdminOrderFlowTest.updateTAT" duration-ms="2605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:06 IST" name="addRemarks" finished-at="2025-08-26T11:27:07 IST" depends-on-methods="tests.AdminOrderFlowTest.addAndAssignUsers" duration-ms="722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:07 IST" name="addAttachments" finished-at="2025-08-26T11:27:07 IST" depends-on-methods="tests.AdminOrderFlowTest.addRemarks" duration-ms="615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:07 IST" name="completeStages" finished-at="2025-08-26T11:27:11 IST" depends-on-methods="tests.AdminOrderFlowTest.addAttachments" duration-ms="3155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="verifyCompletion()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:11 IST" name="verifyCompletion" finished-at="2025-08-26T11:27:13 IST" depends-on-methods="tests.AdminOrderFlowTest.completeStages" duration-ms="2351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompletion -->
        <test-method signature="verifyOrderInUICompleted()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:13 IST" name="verifyOrderInUICompleted" finished-at="2025-08-26T11:27:25 IST" depends-on-methods="tests.AdminOrderFlowTest.verifyCompletion" duration-ms="12440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderInUICompleted -->
        <test-method signature="verifyStatusCompletedViaUI()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:25 IST" name="verifyStatusCompletedViaUI" finished-at="2025-08-26T11:27:40 IST" depends-on-methods="tests.AdminOrderFlowTest.verifyOrderInUICompleted" duration-ms="14275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStatusCompletedViaUI -->
        <test-method signature="updateUser()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:40 IST" name="updateUser" finished-at="2025-08-26T11:27:40 IST" depends-on-methods="tests.AdminOrderFlowTest.addAndAssignUsers, tests.AdminOrderFlowTest.verifyStatusCompletedViaUI" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
        <test-method signature="downloadcompleteOnTimeReportTest()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:40 IST" name="downloadcompleteOnTimeReportTest" finished-at="2025-08-26T11:27:41 IST" depends-on-methods="tests.AdminOrderFlowTest.updateUser" duration-ms="747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteOnTimeReportTest -->
        <test-method signature="downloadcompleteWithDelayReportTest()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:41 IST" name="downloadcompleteWithDelayReportTest" finished-at="2025-08-26T11:27:41 IST" depends-on-methods="tests.AdminOrderFlowTest.downloadcompleteOnTimeReportTest" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteWithDelayReportTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AdminOrderFlowTest@12c7a01b]" started-at="2025-08-26T11:27:41 IST" name="tearDown" finished-at="2025-08-26T11:27:41 IST" duration-ms="387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.AdminOrderFlowTest -->
    </test> <!-- API - Admin Flow -->
    <test started-at="2025-08-26T11:27:41 IST" name="API - Admin Order with Split Flow" finished-at="2025-08-26T11:27:54 IST" duration-ms="12357">
      <class name="tests.AdminSplitOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:41 IST" name="setupSession" finished-at="2025-08-26T11:27:42 IST" duration-ms="404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:42 IST" name="createOrder" finished-at="2025-08-26T11:27:42 IST" duration-ms="659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="downloadcompleteOnTimeReportTest()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:42 IST" name="downloadcompleteOnTimeReportTest" finished-at="2025-08-26T11:27:43 IST" duration-ms="743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteOnTimeReportTest -->
        <test-method signature="downloadcompleteWithDelayReportTest()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:43 IST" name="downloadcompleteWithDelayReportTest" finished-at="2025-08-26T11:27:43 IST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteWithDelayReportTest -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:43 IST" name="splitOrder" finished-at="2025-08-26T11:27:44 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.createOrder" duration-ms="904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:44 IST" name="updateTAT" finished-at="2025-08-26T11:27:45 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.splitOrder" duration-ms="469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:45 IST" name="addAndAssignUsers" finished-at="2025-08-26T11:27:47 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.updateTAT" duration-ms="2642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:47 IST" name="addRemarks" finished-at="2025-08-26T11:27:48 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers" duration-ms="1122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:48 IST" name="completeStages" finished-at="2025-08-26T11:27:50 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers" duration-ms="1437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:50 IST" name="addAttachments" finished-at="2025-08-26T11:27:51 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addRemarks" duration-ms="1019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="verifyCompletion()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:51 IST" name="verifyCompletion" finished-at="2025-08-26T11:27:53 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.completeStages" duration-ms="2356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompletion -->
        <test-method signature="updateUser()[pri:0, instance:tests.AdminSplitOrderFlowTest@4d9ac0b4]" started-at="2025-08-26T11:27:53 IST" name="updateUser" finished-at="2025-08-26T11:27:54 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers, tests.AdminSplitOrderFlowTest.verifyCompletion" duration-ms="364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
      </class> <!-- tests.AdminSplitOrderFlowTest -->
    </test> <!-- API - Admin Order with Split Flow -->
    <test started-at="2025-08-26T11:27:54 IST" name="API - Admin Assignee Flow" finished-at="2025-08-26T11:28:13 IST" duration-ms="19318">
      <class name="tests.AdminAssigneeOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@115667d]" started-at="2025-08-26T11:27:54 IST" name="setupSession" finished-at="2025-08-26T11:27:54 IST" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@115667d]" started-at="2025-08-26T11:27:54 IST" name="createOrder" finished-at="2025-08-26T11:27:56 IST" duration-ms="2503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@115667d]" started-at="2025-08-26T11:27:56 IST" name="splitOrder" finished-at="2025-08-26T11:27:57 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.createOrder" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@115667d]" started-at="2025-08-26T11:27:57 IST" name="updateTAT" finished-at="2025-08-26T11:27:59 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.splitOrder" duration-ms="2263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@115667d]" started-at="2025-08-26T11:27:59 IST" name="addAndAssignUsers" finished-at="2025-08-26T11:28:01 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.updateTAT" duration-ms="2217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@115667d]" started-at="2025-08-26T11:28:01 IST" name="addRemarks" finished-at="2025-08-26T11:28:02 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addAndAssignUsers" duration-ms="618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@115667d]" started-at="2025-08-26T11:28:02 IST" name="addAttachments" finished-at="2025-08-26T11:28:02 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addRemarks" duration-ms="640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="switchToAssignedUser()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@115667d]" started-at="2025-08-26T11:28:02 IST" name="switchToAssignedUser" finished-at="2025-08-26T11:28:03 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addAndAssignUsers, tests.AdminAssigneeOrderFlowTest.addAttachments" duration-ms="398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- switchToAssignedUser -->
        <test-method signature="termAndConditionAssignedUser()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@115667d]" started-at="2025-08-26T11:28:03 IST" name="termAndConditionAssignedUser" finished-at="2025-08-26T11:28:03 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.switchToAssignedUser" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termAndConditionAssignedUser -->
        <test-method signature="completeStagesWithRemarksAndAttachments()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@115667d]" started-at="2025-08-26T11:28:03 IST" name="completeStagesWithRemarksAndAttachments" finished-at="2025-08-26T11:28:13 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.termAndConditionAssignedUser" duration-ms="10019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStagesWithRemarksAndAttachments -->
      </class> <!-- tests.AdminAssigneeOrderFlowTest -->
    </test> <!-- API - Admin Assignee Flow -->
    <test started-at="2025-08-26T11:28:13 IST" name="API - Admin Multiple Assignee Flow" finished-at="2025-08-26T11:28:45 IST" duration-ms="32227">
      <class name="tests.AdminMultipleAssigneeOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@495fac5f]" started-at="2025-08-26T11:28:13 IST" name="setupSession" finished-at="2025-08-26T11:28:14 IST" duration-ms="543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@495fac5f]" started-at="2025-08-26T11:28:14 IST" name="createOrder" finished-at="2025-08-26T11:28:16 IST" duration-ms="2561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@495fac5f]" started-at="2025-08-26T11:28:16 IST" name="splitOrder" finished-at="2025-08-26T11:28:16 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.createOrder" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@495fac5f]" started-at="2025-08-26T11:28:16 IST" name="updateTAT" finished-at="2025-08-26T11:28:19 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.splitOrder" duration-ms="2605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="createAndAssignMultipleUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@495fac5f]" started-at="2025-08-26T11:28:19 IST" name="createAndAssignMultipleUsers" finished-at="2025-08-26T11:28:24 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.updateTAT" duration-ms="5151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAndAssignMultipleUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@495fac5f]" started-at="2025-08-26T11:28:24 IST" name="addRemarks" finished-at="2025-08-26T11:28:25 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.createAndAssignMultipleUsers" duration-ms="613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@495fac5f]" started-at="2025-08-26T11:28:25 IST" name="addAttachments" finished-at="2025-08-26T11:28:25 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.addRemarks" duration-ms="894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="acceptTermsForAllUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@495fac5f]" started-at="2025-08-26T11:28:25 IST" name="acceptTermsForAllUsers" finished-at="2025-08-26T11:28:27 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.addAttachments" duration-ms="1612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptTermsForAllUsers -->
        <test-method signature="performStageActionsAsMultipleUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@495fac5f]" started-at="2025-08-26T11:28:27 IST" name="performStageActionsAsMultipleUsers" finished-at="2025-08-26T11:28:45 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.acceptTermsForAllUsers" duration-ms="18129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performStageActionsAsMultipleUsers -->
      </class> <!-- tests.AdminMultipleAssigneeOrderFlowTest -->
    </test> <!-- API - Admin Multiple Assignee Flow -->
    <test started-at="2025-08-26T11:28:45 IST" name="API - Admin Reject Flow" finished-at="2025-08-26T11:29:28 IST" duration-ms="42360">
      <class name="tests.AdminOrderRejectFlowTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AdminOrderRejectFlowTest@495b0487]" started-at="2025-08-26T11:28:45 IST" name="setUp" finished-at="2025-08-26T11:28:48 IST" duration-ms="2768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminOrderRejectFlowTest@495b0487]" started-at="2025-08-26T11:28:48 IST" name="setupSession" finished-at="2025-08-26T11:28:50 IST" duration-ms="1618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@495b0487]" started-at="2025-08-26T11:28:50 IST" name="createOrder" finished-at="2025-08-26T11:28:52 IST" duration-ms="2465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="verifyOrderInUI()[pri:0, instance:tests.AdminOrderRejectFlowTest@495b0487]" started-at="2025-08-26T11:28:52 IST" name="verifyOrderInUI" finished-at="2025-08-26T11:29:06 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.createOrder" duration-ms="13455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderInUI -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@495b0487]" started-at="2025-08-26T11:29:06 IST" name="splitOrder" finished-at="2025-08-26T11:29:06 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.verifyOrderInUI" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminOrderRejectFlowTest@495b0487]" started-at="2025-08-26T11:29:06 IST" name="updateTAT" finished-at="2025-08-26T11:29:09 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.splitOrder" duration-ms="3327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminOrderRejectFlowTest@495b0487]" started-at="2025-08-26T11:29:09 IST" name="addAndAssignUsers" finished-at="2025-08-26T11:29:11 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.updateTAT" duration-ms="2014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminOrderRejectFlowTest@495b0487]" started-at="2025-08-26T11:29:11 IST" name="completeStages" finished-at="2025-08-26T11:29:13 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.addAndAssignUsers" duration-ms="2342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="verifyRejectOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@495b0487]" started-at="2025-08-26T11:29:13 IST" name="verifyRejectOrder" finished-at="2025-08-26T11:29:16 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.completeStages" duration-ms="2246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRejectOrder -->
        <test-method signature="verifyOrderInUIRejected()[pri:0, instance:tests.AdminOrderRejectFlowTest@495b0487]" started-at="2025-08-26T11:29:16 IST" name="verifyOrderInUIRejected" finished-at="2025-08-26T11:29:27 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.verifyRejectOrder" duration-ms="11649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderInUIRejected -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AdminOrderRejectFlowTest@495b0487]" started-at="2025-08-26T11:29:27 IST" name="tearDown" finished-at="2025-08-26T11:29:28 IST" duration-ms="361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.AdminOrderRejectFlowTest -->
    </test> <!-- API - Admin Reject Flow -->
    <test started-at="2025-08-26T11:29:28 IST" name="UI - Report Validation" finished-at="2025-08-26T11:29:44 IST" duration-ms="16812">
      <class name="tests.ReportWithExcel">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ReportWithExcel@4b6690c0]" started-at="2025-08-26T11:29:28 IST" name="setUp" finished-at="2025-08-26T11:29:30 IST" duration-ms="2840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="compareReportUIAndExcelData()[pri:0, instance:tests.ReportWithExcel@4b6690c0]" started-at="2025-08-26T11:29:30 IST" name="compareReportUIAndExcelData" finished-at="2025-08-26T11:29:44 IST" duration-ms="13590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareReportUIAndExcelData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ReportWithExcel@4b6690c0]" started-at="2025-08-26T11:29:44 IST" name="tearDown" finished-at="2025-08-26T11:29:44 IST" duration-ms="380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ReportWithExcel -->
    </test> <!-- UI - Report Validation -->
    <test started-at="2025-08-26T11:29:45 IST" name="UI - Add User via UI" finished-at="2025-08-26T11:30:07 IST" duration-ms="22402">
      <class name="tests.AddUserTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AddUserTest@623e088f]" started-at="2025-08-26T11:29:45 IST" name="setUp" finished-at="2025-08-26T11:29:47 IST" duration-ms="2687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testfillAddUser()[pri:0, instance:tests.AddUserTest@623e088f]" started-at="2025-08-26T11:29:47 IST" name="testfillAddUser" finished-at="2025-08-26T11:30:07 IST" duration-ms="19338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testfillAddUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AddUserTest@623e088f]" started-at="2025-08-26T11:30:07 IST" name="tearDown" finished-at="2025-08-26T11:30:07 IST" duration-ms="375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.AddUserTest -->
    </test> <!-- UI - Add User via UI -->
    <test started-at="2025-08-26T11:30:07 IST" name="UI - Dashboard After" finished-at="2025-08-26T11:30:17 IST" duration-ms="10154">
      <class name="tests.DashboardTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.DashboardTest@3d2ee678]" started-at="2025-08-26T11:30:07 IST" name="setUp" finished-at="2025-08-26T11:30:10 IST" duration-ms="2895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDashboardCountsAfter()[pri:0, instance:tests.DashboardTest@3d2ee678]" started-at="2025-08-26T11:30:10 IST" name="testDashboardCountsAfter" finished-at="2025-08-26T11:30:17 IST" duration-ms="6898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDashboardCountsAfter -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DashboardTest@3d2ee678]" started-at="2025-08-26T11:30:17 IST" name="tearDown" finished-at="2025-08-26T11:30:17 IST" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DashboardTest -->
    </test> <!-- UI - Dashboard After -->
  </suite> <!-- Hybrid Automation Suite -->
</testng-results>
