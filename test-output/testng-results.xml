<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="34" passed="34" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-29T11:31:25 IST" name="Hybrid Automation Suite" finished-at="2025-07-29T11:33:27 IST" duration-ms="121382">
    <groups>
    </groups>
    <test started-at="2025-07-29T11:31:25 IST" name="UI - Dashboard Before" finished-at="2025-07-29T11:31:38 IST" duration-ms="12860">
      <class name="tests.DashboardTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.DashboardTest@76a4ebf2]" started-at="2025-07-29T11:31:25 IST" name="setUp" finished-at="2025-07-29T11:31:30 IST" duration-ms="4412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDashboardCountsBefore()[pri:0, instance:tests.DashboardTest@76a4ebf2]" started-at="2025-07-29T11:31:30 IST" name="testDashboardCountsBefore" finished-at="2025-07-29T11:31:38 IST" duration-ms="7882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDashboardCountsBefore -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DashboardTest@76a4ebf2]" started-at="2025-07-29T11:31:38 IST" name="tearDown" finished-at="2025-07-29T11:31:38 IST" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DashboardTest -->
    </test> <!-- UI - Dashboard Before -->
    <test started-at="2025-07-29T11:31:39 IST" name="API - Admin Flow" finished-at="2025-07-29T11:31:59 IST" duration-ms="20571">
      <class name="tests.AdminOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:39 IST" name="setupSession" finished-at="2025-07-29T11:31:42 IST" duration-ms="3369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:42 IST" name="createOrder" finished-at="2025-07-29T11:31:45 IST" duration-ms="3033" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="downloadcompleteOnTimeReportTest()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:45 IST" name="downloadcompleteOnTimeReportTest" finished-at="2025-07-29T11:31:46 IST" duration-ms="482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteOnTimeReportTest -->
        <test-method signature="downloadcompleteWithDelayReportTest()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:46 IST" name="downloadcompleteWithDelayReportTest" finished-at="2025-07-29T11:31:46 IST" duration-ms="161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteWithDelayReportTest -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:46 IST" name="splitOrder" finished-at="2025-07-29T11:31:46 IST" depends-on-methods="tests.AdminOrderFlowTest.createOrder" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:46 IST" name="updateTAT" finished-at="2025-07-29T11:31:49 IST" depends-on-methods="tests.AdminOrderFlowTest.splitOrder" duration-ms="2687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:49 IST" name="addAndAssignUsers" finished-at="2025-07-29T11:31:51 IST" depends-on-methods="tests.AdminOrderFlowTest.updateTAT" duration-ms="2712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:51 IST" name="addRemarks" finished-at="2025-07-29T11:31:52 IST" depends-on-methods="tests.AdminOrderFlowTest.addAndAssignUsers" duration-ms="858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:52 IST" name="addAttachments" finished-at="2025-07-29T11:31:53 IST" depends-on-methods="tests.AdminOrderFlowTest.addRemarks" duration-ms="1059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:53 IST" name="completeStages" finished-at="2025-07-29T11:31:57 IST" depends-on-methods="tests.AdminOrderFlowTest.addAttachments" duration-ms="3368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="verifyCompletion()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:57 IST" name="verifyCompletion" finished-at="2025-07-29T11:31:59 IST" depends-on-methods="tests.AdminOrderFlowTest.completeStages" duration-ms="2478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompletion -->
        <test-method signature="updateUser()[pri:0, instance:tests.AdminOrderFlowTest@49cb9cb5]" started-at="2025-07-29T11:31:59 IST" name="updateUser" finished-at="2025-07-29T11:31:59 IST" depends-on-methods="tests.AdminOrderFlowTest.addAndAssignUsers, tests.AdminOrderFlowTest.verifyCompletion" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
      </class> <!-- tests.AdminOrderFlowTest -->
    </test> <!-- API - Admin Flow -->
    <test started-at="2025-07-29T11:31:59 IST" name="API - Admin Asignee Flow" finished-at="2025-07-29T11:32:20 IST" duration-ms="20768">
      <class name="tests.AdminAssigneeOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@13d9b21f]" started-at="2025-07-29T11:31:59 IST" name="setupSession" finished-at="2025-07-29T11:32:00 IST" duration-ms="445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@13d9b21f]" started-at="2025-07-29T11:32:00 IST" name="createOrder" finished-at="2025-07-29T11:32:02 IST" duration-ms="2648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@13d9b21f]" started-at="2025-07-29T11:32:02 IST" name="splitOrder" finished-at="2025-07-29T11:32:03 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.createOrder" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@13d9b21f]" started-at="2025-07-29T11:32:03 IST" name="updateTAT" finished-at="2025-07-29T11:32:05 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.splitOrder" duration-ms="2356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@13d9b21f]" started-at="2025-07-29T11:32:05 IST" name="addAndAssignUsers" finished-at="2025-07-29T11:32:08 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.updateTAT" duration-ms="2816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@13d9b21f]" started-at="2025-07-29T11:32:08 IST" name="addRemarks" finished-at="2025-07-29T11:32:09 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addAndAssignUsers" duration-ms="848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@13d9b21f]" started-at="2025-07-29T11:32:09 IST" name="addAttachments" finished-at="2025-07-29T11:32:09 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addRemarks" duration-ms="821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="switchToAssignedUser()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@13d9b21f]" started-at="2025-07-29T11:32:09 IST" name="switchToAssignedUser" finished-at="2025-07-29T11:32:10 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addAndAssignUsers, tests.AdminAssigneeOrderFlowTest.addAttachments" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- switchToAssignedUser -->
        <test-method signature="termAndConditionAssignedUser()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@13d9b21f]" started-at="2025-07-29T11:32:10 IST" name="termAndConditionAssignedUser" finished-at="2025-07-29T11:32:10 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.switchToAssignedUser" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termAndConditionAssignedUser -->
        <test-method signature="completeStagesWithRemarksAndAttachments()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@13d9b21f]" started-at="2025-07-29T11:32:10 IST" name="completeStagesWithRemarksAndAttachments" finished-at="2025-07-29T11:32:20 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.termAndConditionAssignedUser" duration-ms="10008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStagesWithRemarksAndAttachments -->
      </class> <!-- tests.AdminAssigneeOrderFlowTest -->
    </test> <!-- API - Admin Asignee Flow -->
    <test started-at="2025-07-29T11:32:20 IST" name="API - Admin Order with Split Flow" finished-at="2025-07-29T11:32:32 IST" duration-ms="11778">
      <class name="tests.AdminSplitOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminSplitOrderFlowTest@2654635]" started-at="2025-07-29T11:32:20 IST" name="setupSession" finished-at="2025-07-29T11:32:21 IST" duration-ms="443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminSplitOrderFlowTest@2654635]" started-at="2025-07-29T11:32:21 IST" name="createOrder" finished-at="2025-07-29T11:32:21 IST" duration-ms="973" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="downloadcompleteOnTimeReportTest()[pri:0, instance:tests.AdminSplitOrderFlowTest@2654635]" started-at="2025-07-29T11:32:21 IST" name="downloadcompleteOnTimeReportTest" finished-at="2025-07-29T11:32:22 IST" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteOnTimeReportTest -->
        <test-method signature="downloadcompleteWithDelayReportTest()[pri:0, instance:tests.AdminSplitOrderFlowTest@2654635]" started-at="2025-07-29T11:32:22 IST" name="downloadcompleteWithDelayReportTest" finished-at="2025-07-29T11:32:22 IST" duration-ms="380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteWithDelayReportTest -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminSplitOrderFlowTest@2654635]" started-at="2025-07-29T11:32:22 IST" name="splitOrder" finished-at="2025-07-29T11:32:24 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.createOrder" duration-ms="1233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminSplitOrderFlowTest@2654635]" started-at="2025-07-29T11:32:24 IST" name="updateTAT" finished-at="2025-07-29T11:32:24 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.splitOrder" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminSplitOrderFlowTest@2654635]" started-at="2025-07-29T11:32:24 IST" name="addAndAssignUsers" finished-at="2025-07-29T11:32:26 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.updateTAT" duration-ms="2316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminSplitOrderFlowTest@2654635]" started-at="2025-07-29T11:32:26 IST" name="addRemarks" finished-at="2025-07-29T11:32:27 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers" duration-ms="969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminSplitOrderFlowTest@2654635]" started-at="2025-07-29T11:32:27 IST" name="completeStages" finished-at="2025-07-29T11:32:29 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers" duration-ms="1364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminSplitOrderFlowTest@2654635]" started-at="2025-07-29T11:32:29 IST" name="addAttachments" finished-at="2025-07-29T11:32:29 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addRemarks" duration-ms="819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="verifyCompletion()[pri:0, instance:tests.AdminSplitOrderFlowTest@2654635]" started-at="2025-07-29T11:32:29 IST" name="verifyCompletion" finished-at="2025-07-29T11:32:32 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.completeStages" duration-ms="2526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompletion -->
      </class> <!-- tests.AdminSplitOrderFlowTest -->
    </test> <!-- API - Admin Order with Split Flow -->
    <test started-at="2025-07-29T11:32:32 IST" name="UI - Added New User Flow" finished-at="2025-07-29T11:32:55 IST" duration-ms="22828">
      <class name="tests.AddUserTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AddUserTest@115667d]" started-at="2025-07-29T11:32:32 IST" name="setUp" finished-at="2025-07-29T11:32:35 IST" duration-ms="3350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testfillAddUser()[pri:0, instance:tests.AddUserTest@115667d]" started-at="2025-07-29T11:32:35 IST" name="testfillAddUser" finished-at="2025-07-29T11:32:54 IST" duration-ms="19067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testfillAddUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AddUserTest@115667d]" started-at="2025-07-29T11:32:54 IST" name="tearDown" finished-at="2025-07-29T11:32:55 IST" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.AddUserTest -->
    </test> <!-- UI - Added New User Flow -->
    <test started-at="2025-07-29T11:32:55 IST" name="UI - Report Validation" finished-at="2025-07-29T11:33:15 IST" duration-ms="19783">
      <class name="tests.ReportValidationTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ReportValidationTest@6127a7e]" started-at="2025-07-29T11:32:55 IST" name="setUp" finished-at="2025-07-29T11:32:59 IST" duration-ms="4200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="compareReportUIAndExcelData()[pri:0, instance:tests.ReportValidationTest@6127a7e]" started-at="2025-07-29T11:32:59 IST" name="compareReportUIAndExcelData" finished-at="2025-07-29T11:33:14 IST" duration-ms="15118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareReportUIAndExcelData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ReportValidationTest@6127a7e]" started-at="2025-07-29T11:33:14 IST" name="tearDown" finished-at="2025-07-29T11:33:15 IST" duration-ms="462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ReportValidationTest -->
    </test> <!-- UI - Report Validation -->
    <test started-at="2025-07-29T11:33:15 IST" name="UI - Dashboard After" finished-at="2025-07-29T11:33:27 IST" duration-ms="11955">
      <class name="tests.DashboardTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.DashboardTest@635572a7]" started-at="2025-07-29T11:33:15 IST" name="setUp" finished-at="2025-07-29T11:33:19 IST" duration-ms="4414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDashboardCountsAfter()[pri:0, instance:tests.DashboardTest@635572a7]" started-at="2025-07-29T11:33:19 IST" name="testDashboardCountsAfter" finished-at="2025-07-29T11:33:26 IST" duration-ms="7111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDashboardCountsAfter -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DashboardTest@635572a7]" started-at="2025-07-29T11:33:26 IST" name="tearDown" finished-at="2025-07-29T11:33:27 IST" duration-ms="423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DashboardTest -->
    </test> <!-- UI - Dashboard After -->
  </suite> <!-- Hybrid Automation Suite -->
</testng-results>
