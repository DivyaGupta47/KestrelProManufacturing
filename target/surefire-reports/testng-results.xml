<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="47" passed="47" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-31T17:04:48 IST" name="Hybrid Automation Suite" finished-at="2025-07-31T17:07:37 IST" duration-ms="169392">
    <groups>
    </groups>
    <test started-at="2025-07-31T17:04:48 IST" name="UI - Dashboard Before" finished-at="2025-07-31T17:05:06 IST" duration-ms="18710">
      <class name="tests.DashboardTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.DashboardTest@14dd9eb7]" started-at="2025-07-31T17:04:48 IST" name="setUp" finished-at="2025-07-31T17:04:54 IST" duration-ms="6629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDashboardCountsBefore()[pri:0, instance:tests.DashboardTest@14dd9eb7]" started-at="2025-07-31T17:04:54 IST" name="testDashboardCountsBefore" finished-at="2025-07-31T17:05:05 IST" duration-ms="10791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDashboardCountsBefore -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DashboardTest@14dd9eb7]" started-at="2025-07-31T17:05:05 IST" name="tearDown" finished-at="2025-07-31T17:05:06 IST" duration-ms="1135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DashboardTest -->
    </test> <!-- UI - Dashboard Before -->
    <test started-at="2025-07-31T17:05:07 IST" name="API - Admin Flow" finished-at="2025-07-31T17:05:32 IST" duration-ms="24327">
      <class name="tests.AdminOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:07 IST" name="setupSession" finished-at="2025-07-31T17:05:13 IST" duration-ms="5479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:13 IST" name="createOrder" finished-at="2025-07-31T17:05:16 IST" duration-ms="3375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="downloadcompleteOnTimeReportTest()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:16 IST" name="downloadcompleteOnTimeReportTest" finished-at="2025-07-31T17:05:17 IST" duration-ms="488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteOnTimeReportTest -->
        <test-method signature="downloadcompleteWithDelayReportTest()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:17 IST" name="downloadcompleteWithDelayReportTest" finished-at="2025-07-31T17:05:17 IST" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteWithDelayReportTest -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:17 IST" name="splitOrder" finished-at="2025-07-31T17:05:17 IST" depends-on-methods="tests.AdminOrderFlowTest.createOrder" duration-ms="162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:17 IST" name="updateTAT" finished-at="2025-07-31T17:05:20 IST" depends-on-methods="tests.AdminOrderFlowTest.splitOrder" duration-ms="2774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:20 IST" name="addAndAssignUsers" finished-at="2025-07-31T17:05:23 IST" depends-on-methods="tests.AdminOrderFlowTest.updateTAT" duration-ms="3623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:23 IST" name="addRemarks" finished-at="2025-07-31T17:05:24 IST" depends-on-methods="tests.AdminOrderFlowTest.addAndAssignUsers" duration-ms="877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:24 IST" name="addAttachments" finished-at="2025-07-31T17:05:25 IST" depends-on-methods="tests.AdminOrderFlowTest.addRemarks" duration-ms="901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:25 IST" name="completeStages" finished-at="2025-07-31T17:05:29 IST" depends-on-methods="tests.AdminOrderFlowTest.addAttachments" duration-ms="3695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="verifyCompletion()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:29 IST" name="verifyCompletion" finished-at="2025-07-31T17:05:32 IST" depends-on-methods="tests.AdminOrderFlowTest.completeStages" duration-ms="2581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompletion -->
        <test-method signature="updateUser()[pri:0, instance:tests.AdminOrderFlowTest@1f9f6368]" started-at="2025-07-31T17:05:32 IST" name="updateUser" finished-at="2025-07-31T17:05:32 IST" depends-on-methods="tests.AdminOrderFlowTest.addAndAssignUsers, tests.AdminOrderFlowTest.verifyCompletion" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
      </class> <!-- tests.AdminOrderFlowTest -->
    </test> <!-- API - Admin Flow -->
    <test started-at="2025-07-31T17:05:32 IST" name="API - Admin Order with Split Flow" finished-at="2025-07-31T17:05:43 IST" duration-ms="11471">
      <class name="tests.AdminSplitOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminSplitOrderFlowTest@7dc3712]" started-at="2025-07-31T17:05:32 IST" name="setupSession" finished-at="2025-07-31T17:05:32 IST" duration-ms="560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminSplitOrderFlowTest@7dc3712]" started-at="2025-07-31T17:05:32 IST" name="createOrder" finished-at="2025-07-31T17:05:33 IST" duration-ms="780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="downloadcompleteOnTimeReportTest()[pri:0, instance:tests.AdminSplitOrderFlowTest@7dc3712]" started-at="2025-07-31T17:05:33 IST" name="downloadcompleteOnTimeReportTest" finished-at="2025-07-31T17:05:34 IST" duration-ms="647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteOnTimeReportTest -->
        <test-method signature="downloadcompleteWithDelayReportTest()[pri:0, instance:tests.AdminSplitOrderFlowTest@7dc3712]" started-at="2025-07-31T17:05:34 IST" name="downloadcompleteWithDelayReportTest" finished-at="2025-07-31T17:05:34 IST" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadcompleteWithDelayReportTest -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminSplitOrderFlowTest@7dc3712]" started-at="2025-07-31T17:05:34 IST" name="splitOrder" finished-at="2025-07-31T17:05:35 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.createOrder" duration-ms="774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminSplitOrderFlowTest@7dc3712]" started-at="2025-07-31T17:05:35 IST" name="updateTAT" finished-at="2025-07-31T17:05:35 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.splitOrder" duration-ms="360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminSplitOrderFlowTest@7dc3712]" started-at="2025-07-31T17:05:35 IST" name="addAndAssignUsers" finished-at="2025-07-31T17:05:38 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.updateTAT" duration-ms="2707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminSplitOrderFlowTest@7dc3712]" started-at="2025-07-31T17:05:38 IST" name="addRemarks" finished-at="2025-07-31T17:05:39 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers" duration-ms="850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminSplitOrderFlowTest@7dc3712]" started-at="2025-07-31T17:05:39 IST" name="completeStages" finished-at="2025-07-31T17:05:40 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addAndAssignUsers" duration-ms="1316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminSplitOrderFlowTest@7dc3712]" started-at="2025-07-31T17:05:40 IST" name="addAttachments" finished-at="2025-07-31T17:05:41 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.addRemarks" duration-ms="867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="verifyCompletion()[pri:0, instance:tests.AdminSplitOrderFlowTest@7dc3712]" started-at="2025-07-31T17:05:41 IST" name="verifyCompletion" finished-at="2025-07-31T17:05:43 IST" depends-on-methods="tests.AdminSplitOrderFlowTest.completeStages" duration-ms="2439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompletion -->
      </class> <!-- tests.AdminSplitOrderFlowTest -->
    </test> <!-- API - Admin Order with Split Flow -->
    <test started-at="2025-07-31T17:05:43 IST" name="API - Admin Asignee Flow" finished-at="2025-07-31T17:06:04 IST" duration-ms="21177">
      <class name="tests.AdminAssigneeOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@6d5620ce]" started-at="2025-07-31T17:05:43 IST" name="setupSession" finished-at="2025-07-31T17:05:44 IST" duration-ms="465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@6d5620ce]" started-at="2025-07-31T17:05:44 IST" name="createOrder" finished-at="2025-07-31T17:05:46 IST" duration-ms="2690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@6d5620ce]" started-at="2025-07-31T17:05:46 IST" name="splitOrder" finished-at="2025-07-31T17:05:47 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.createOrder" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@6d5620ce]" started-at="2025-07-31T17:05:47 IST" name="updateTAT" finished-at="2025-07-31T17:05:49 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.splitOrder" duration-ms="2307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@6d5620ce]" started-at="2025-07-31T17:05:49 IST" name="addAndAssignUsers" finished-at="2025-07-31T17:05:52 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.updateTAT" duration-ms="2653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@6d5620ce]" started-at="2025-07-31T17:05:52 IST" name="addRemarks" finished-at="2025-07-31T17:05:53 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addAndAssignUsers" duration-ms="1011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@6d5620ce]" started-at="2025-07-31T17:05:53 IST" name="addAttachments" finished-at="2025-07-31T17:05:53 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addRemarks" duration-ms="818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="switchToAssignedUser()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@6d5620ce]" started-at="2025-07-31T17:05:53 IST" name="switchToAssignedUser" finished-at="2025-07-31T17:05:54 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.addAndAssignUsers, tests.AdminAssigneeOrderFlowTest.addAttachments" duration-ms="481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- switchToAssignedUser -->
        <test-method signature="termAndConditionAssignedUser()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@6d5620ce]" started-at="2025-07-31T17:05:54 IST" name="termAndConditionAssignedUser" finished-at="2025-07-31T17:05:54 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.switchToAssignedUser" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termAndConditionAssignedUser -->
        <test-method signature="completeStagesWithRemarksAndAttachments()[pri:0, instance:tests.AdminAssigneeOrderFlowTest@6d5620ce]" started-at="2025-07-31T17:05:54 IST" name="completeStagesWithRemarksAndAttachments" finished-at="2025-07-31T17:06:04 IST" depends-on-methods="tests.AdminAssigneeOrderFlowTest.termAndConditionAssignedUser" duration-ms="10335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStagesWithRemarksAndAttachments -->
      </class> <!-- tests.AdminAssigneeOrderFlowTest -->
    </test> <!-- API - Admin Asignee Flow -->
    <test started-at="2025-07-31T17:06:05 IST" name="API - Admin Multiple Assignee Flow" finished-at="2025-07-31T17:06:37 IST" duration-ms="32170">
      <class name="tests.AdminMultipleAssigneeOrderFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@147e2ae7]" started-at="2025-07-31T17:06:05 IST" name="setupSession" finished-at="2025-07-31T17:06:05 IST" duration-ms="442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@147e2ae7]" started-at="2025-07-31T17:06:05 IST" name="createOrder" finished-at="2025-07-31T17:06:08 IST" duration-ms="2741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@147e2ae7]" started-at="2025-07-31T17:06:08 IST" name="splitOrder" finished-at="2025-07-31T17:06:08 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.createOrder" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@147e2ae7]" started-at="2025-07-31T17:06:08 IST" name="updateTAT" finished-at="2025-07-31T17:06:10 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.splitOrder" duration-ms="2291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="createAndAssignMultipleUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@147e2ae7]" started-at="2025-07-31T17:06:10 IST" name="createAndAssignMultipleUsers" finished-at="2025-07-31T17:06:16 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.updateTAT" duration-ms="5354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAndAssignMultipleUsers -->
        <test-method signature="addRemarks()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@147e2ae7]" started-at="2025-07-31T17:06:16 IST" name="addRemarks" finished-at="2025-07-31T17:06:16 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.createAndAssignMultipleUsers" duration-ms="762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemarks -->
        <test-method signature="addAttachments()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@147e2ae7]" started-at="2025-07-31T17:06:16 IST" name="addAttachments" finished-at="2025-07-31T17:06:17 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.addRemarks" duration-ms="851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttachments -->
        <test-method signature="acceptTermsForAllUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@147e2ae7]" started-at="2025-07-31T17:06:17 IST" name="acceptTermsForAllUsers" finished-at="2025-07-31T17:06:19 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.addAttachments" duration-ms="1834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptTermsForAllUsers -->
        <test-method signature="performStageActionsAsMultipleUsers()[pri:0, instance:tests.AdminMultipleAssigneeOrderFlowTest@147e2ae7]" started-at="2025-07-31T17:06:19 IST" name="performStageActionsAsMultipleUsers" finished-at="2025-07-31T17:06:37 IST" depends-on-methods="tests.AdminMultipleAssigneeOrderFlowTest.acceptTermsForAllUsers" duration-ms="17708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performStageActionsAsMultipleUsers -->
      </class> <!-- tests.AdminMultipleAssigneeOrderFlowTest -->
    </test> <!-- API - Admin Multiple Assignee Flow -->
    <test started-at="2025-07-31T17:06:37 IST" name="API - Admin Reject Flow" finished-at="2025-07-31T17:06:50 IST" duration-ms="12679">
      <class name="tests.AdminOrderRejectFlowTest">
        <test-method is-config="true" signature="setupSession()[pri:0, instance:tests.AdminOrderRejectFlowTest@503f91c3]" started-at="2025-07-31T17:06:37 IST" name="setupSession" finished-at="2025-07-31T17:06:37 IST" duration-ms="466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSession -->
        <test-method signature="createOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@503f91c3]" started-at="2025-07-31T17:06:37 IST" name="createOrder" finished-at="2025-07-31T17:06:40 IST" duration-ms="2806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="splitOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@503f91c3]" started-at="2025-07-31T17:06:40 IST" name="splitOrder" finished-at="2025-07-31T17:06:40 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.createOrder" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitOrder -->
        <test-method signature="updateTAT()[pri:0, instance:tests.AdminOrderRejectFlowTest@503f91c3]" started-at="2025-07-31T17:06:40 IST" name="updateTAT" finished-at="2025-07-31T17:06:43 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.splitOrder" duration-ms="2265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTAT -->
        <test-method signature="addAndAssignUsers()[pri:0, instance:tests.AdminOrderRejectFlowTest@503f91c3]" started-at="2025-07-31T17:06:43 IST" name="addAndAssignUsers" finished-at="2025-07-31T17:06:45 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.updateTAT" duration-ms="2462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndAssignUsers -->
        <test-method signature="completeStages()[pri:0, instance:tests.AdminOrderRejectFlowTest@503f91c3]" started-at="2025-07-31T17:06:45 IST" name="completeStages" finished-at="2025-07-31T17:06:47 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.addAndAssignUsers" duration-ms="2383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeStages -->
        <test-method signature="verifyRejectOrder()[pri:0, instance:tests.AdminOrderRejectFlowTest@503f91c3]" started-at="2025-07-31T17:06:47 IST" name="verifyRejectOrder" finished-at="2025-07-31T17:06:50 IST" depends-on-methods="tests.AdminOrderRejectFlowTest.completeStages" duration-ms="2184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRejectOrder -->
      </class> <!-- tests.AdminOrderRejectFlowTest -->
    </test> <!-- API - Admin Reject Flow -->
    <test started-at="2025-07-31T17:06:50 IST" name="UI - Report Validation" finished-at="2025-07-31T17:07:18 IST" duration-ms="28654">
      <class name="tests.ReportValidationTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ReportValidationTest@3b6d844d]" started-at="2025-07-31T17:06:50 IST" name="setUp" finished-at="2025-07-31T17:06:54 IST" duration-ms="4555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="compareReportUIAndExcelData()[pri:0, instance:tests.ReportValidationTest@3b6d844d]" started-at="2025-07-31T17:06:54 IST" name="compareReportUIAndExcelData" finished-at="2025-07-31T17:07:17 IST" duration-ms="23148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareReportUIAndExcelData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ReportValidationTest@3b6d844d]" started-at="2025-07-31T17:07:17 IST" name="tearDown" finished-at="2025-07-31T17:07:18 IST" duration-ms="946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ReportValidationTest -->
    </test> <!-- UI - Report Validation -->
    <test started-at="2025-07-31T17:07:18 IST" name="UI - Dashboard After" finished-at="2025-07-31T17:07:37 IST" duration-ms="18578">
      <class name="tests.DashboardTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.DashboardTest@730d2164]" started-at="2025-07-31T17:07:18 IST" name="setUp" finished-at="2025-07-31T17:07:24 IST" duration-ms="5170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDashboardCountsAfter()[pri:0, instance:tests.DashboardTest@730d2164]" started-at="2025-07-31T17:07:24 IST" name="testDashboardCountsAfter" finished-at="2025-07-31T17:07:35 IST" duration-ms="11550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDashboardCountsAfter -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DashboardTest@730d2164]" started-at="2025-07-31T17:07:35 IST" name="tearDown" finished-at="2025-07-31T17:07:37 IST" duration-ms="1853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DashboardTest -->
    </test> <!-- UI - Dashboard After -->
  </suite> <!-- Hybrid Automation Suite -->
</testng-results>
